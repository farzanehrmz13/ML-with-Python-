import pandas as pd
from sklearn.neighbors import NearestNeighbors

# Load the dataset
books = pd.read_csv('https://raw.githubusercontent.com/zygmuntz/goodbooks-10k/master/books.csv')
ratings = pd.read_csv('https://raw.githubusercontent.com/zygmuntz/goodbooks-10k/master/ratings.csv')

# Filter users with at least 200 ratings
user_counts = ratings['user_id'].value_counts()
ratings = ratings[ratings['user_id'].isin(user_counts[user_counts >= 200].index)]

# Filter books with at least 100 ratings
book_counts = ratings['book_id'].value_counts()
ratings = ratings[ratings['book_id'].isin(book_counts[book_counts >= 100].index)]

# Merge ratings with books to get titles
ratings = ratings.merge(books[['book_id', 'title']], on='book_id')

# Create pivot table
book_pivot = ratings.pivot_table(index='title', columns='user_id', values='rating').fillna(0)

# Fit KNN model
model = NearestNeighbors(metric='cosine', algorithm='brute')
model.fit(book_pivot)

# Recommendation function
def get_recommends(title):
    if title not in book_pivot.index:
        return [title, []]
    distances, indices = model.kneighbors(book_pivot.loc[title].values.reshape(1, -1), n_neighbors=6)
    recommended_books = []
    for i in range(1, len(distances.flatten())):
        recommended_books.append([book_pivot.index[indices.flatten()[i]], distances.flatten()[i]])
    return [title, recommended_books]

# Example usage
recommendation = get_recommends("The Hobbit")
print(recommendation)
